@page "/alltransactions"
@using BlazorBudget.Web.Data
@using Microsoft.Extensions.Logging
@inject TransactionService TransactionService
@inject ILogger<AllTransactions> Logger

<PageTitle>Transactions</PageTitle>

<h1>Transaction Overview</h1>


<EditForm Model="@filter" OnSubmit="@ApplySelectedFilters">
    <InputText id="name" @bind-Value="filter.TextFilter" />
        <label>
            Recipient
            <InputCheckbox id="matchRecipient" @bind-Value="filter.MatchRecipient" />
        </label>
    <label>
        Reference
        <InputCheckbox id="matchReference" @bind-Value="filter.MatchReference" />
    </label>
    <button type="submit">Submit</button>
</EditForm>
@if (filteredTransactions == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p><em>
        Filter matches @filteredTransactions.Length transactions.
        Total @filteredTransactions.Sum(t => t.Amount) 
        (+@filteredTransactions.Where(t => t.Amount > 0).Sum(t => t.Amount) /
        @filteredTransactions.Where(t => t.Amount < 0).Sum(t => t.Amount) 
        )
    </em></p>
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Type</th>
                <th>Recipient</th>
                <th>Reference</th>
                <th>Amount</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var transaction in filteredTransactions)
            {
                <tr>
                    <td>@transaction.Date.ToShortDateString()</td>
                    <td>@transaction.Type</td>
                    <td>@transaction.Recipient</td>
                    <td>@transaction.Reference</td>
                    <td>@transaction.Amount</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Transaction[]? allTransactions;
    private TransactionFilter filter = new();
    private Transaction[]? filteredTransactions;

    private void ApplySelectedFilters()
    {
        Logger.LogInformation("Applying seleceted filters: {0}", filter);

        if (allTransactions is not null)
            filteredTransactions = allTransactions.Where(filter.Matches).ToArray();
    }

    protected override async Task OnInitializedAsync()
    {
        allTransactions = await TransactionService.GetTransactionsAsync();
        filteredTransactions = allTransactions;
    }
}
